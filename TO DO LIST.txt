
o Create the main menu.

o Add a megaman style explode animation
to the character when something fell on him.

o Add the animations - NEXT(1)

o Set up google Ads.

o Take a random photo from the internet with a 
futuristic background (maybe royalty free), but 
if not take one and stretch out a vent and 
repeat it to make the background - (NOW)

o Sometime in the future update the site and add:

	o Option to upload profile pic.

	o Add news column

	o Add a profile section that allows
	you to see your wins/losses.


o Make it so that the when the column
reaches a certain number, the column
deletes it's blocks, restaring (AFTER LAUNCH AND 500+ Steady Player Base).


o make a gameover animation by deleting
the ground beneath the blocks to create
a falling effect 

o To fix last man standing, give it a countdown
of 10 mins, and if you're both still alive
then highest score wins.

o  Add pause.

o Finish box's ultimate (NEXT).


---------------- (LATER, AFTER RELEASE) --------------------

o create a dictionary object, initially
set it as empty. this will be a dict that
tracks how many blocks are touching each other, for ex:
{red: 4, //this means 4 reds are touching in the column
blue: 0,
etc...}

And only renew/update with new values this object when a 
function (UP_Dict maybe) is called by a block that was destroyed
in that column. The freshly updated version will now be 
used as a pre-state of sorts, and make the blocks no longer
have the time window float for touching after a detonation, 
have the column handle it by setting self check on its blocks
to true if the state has change from previous, so for example:
after a blow up, the state has yellows touching as 0 ({yell: 0...})
but after a few seconds, 2 yellows touch ({yell: 2}), now this
will trigger the column to call check() on the designated blocks (think
of the for loop that looks for blocks above the exploded one, this
is an array of those above blocks)

o Add puzzle creator mode.

o Implement quick jab for box. It's the one 
that reshuffles the order of the blocks. 
we can achieve this by setting up 2 raycasts
on the block that was punched, have 1 that
points all the way up for 3 blocks, and all
the way left. So here's the algo:

Set up left ray casts on ALL blocks, the
upper blocks and the punched block, create
an array **ON** the punched block and return 
the results of teh left raycast to the 
punched block, now we have a huge array
of blocks. We can now shake them, find
2 random blocks in the array, swap em, 
remove em, keep repeating till it's
empty. (NEXT [2])

o TELL PEOPLE HOW THEY CAN DO
DIFFERENT THINGS WITH THE PAINTER (FORMELY
CALLED SPIDER), such as, exploding one ajancent
block (left or right), then deploying which
will give a wierd effect.




